/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.sun.star.wizards.ui;

import com.sun.star.wizards.calendar.CECalendarioAnual;
import com.sun.star.wizards.calendar.CECalendarioMensual;
import com.sun.star.wizards.calendar.CECalendarioSemanalDinamico;
import com.sun.star.wizards.calendar.HiloReloj;
import com.sun.star.wizards.calendar.Manager;
import com.sun.star.wizards.calendar.RepitPersonalizado;
import com.sun.star.wizards.calendar.Tarea;
import com.sun.star.wizards.calendar.TipeRepit;
import com.sun.star.wizards.calendar.TipeTarea;
import java.awt.Point;
import java.util.Calendar;
import java.util.LinkedList;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultCellEditor;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author adrivero
 */
public class Principal extends javax.swing.JFrame {

    /**
     * Creates new form Principal
     */
    Manager man;
    Calendar cal;
    Calendar fechaFinRep;
    ImageIcon image;

    public Principal() {
        initComponents();
        setLocationRelativeTo(null);
        anno.setVisible(false);
        setShowDateLabels();
        man = new Manager();
        JfechaFinal.setCalendar(cal);
        anno.setValue(cal.get(Calendar.YEAR));
        Jfecha.setCalendar(cal);
        jTable1.getTableHeader().setReorderingAllowed(false);

        // jTable1.getColumnModel().getColumn(0).setHeaderRenderer(new MiRender());     
        jTable1.setDefaultRenderer(Object.class, new MiRender());
        /*
         Calendar instance = Calendar.getInstance();
         JfechaFinal.setCalendar(instance);
    
         Jfecha.setCalendar(instance);
         instance.set(instance.get(Calendar.YEAR),
         instance.get(Calendar.MONTH),
         instance.get(Calendar.DAY_OF_MONTH), 8, 0, 0);
         9*/
      

 
  /*     // Disable keyboard edits in the spinner
    JFormattedTextField tf = ((JSpinner.DefaultEditor) anno.getEditor()).getTextField();
    tf.setEditable(false);
//  tf.setBackground(Color.white);*/
        
        updateInterfPlantilla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        Janterior = new javax.swing.JButton();
        Jsiguiente = new javax.swing.JButton();
        cargarCalendario = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cMensual = new javax.swing.JRadioButton();
        cAnual = new javax.swing.JRadioButton();
        cSemanal = new javax.swing.JRadioButton();
        imagenesCalendarios = new javax.swing.JLabel();
        JfechaFinal = new com.toedter.calendar.JDateChooser();
        mes = new com.toedter.calendar.JMonthChooser();
        anno = new com.toedter.calendar.JYearChooser();
        jshowDay = new javax.swing.JLabel();
        Jfecha = new com.toedter.calendar.JDateChooser();
        showDate = new javax.swing.JLabel();
        JLDiaSemana = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Asistente para Calendarios.");
        setResizable(false);

        Janterior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/detras.png"))); // NOI18N
        Janterior.setText("Plantillas");
        Janterior.setToolTipText("Ir a la vista Plantillas.");
        Janterior.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        Janterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JanteriorActionPerformed(evt);
            }
        });

        Jsiguiente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/delante.png"))); // NOI18N
        Jsiguiente.setText("Tareas");
        Jsiguiente.setToolTipText("Ir a la vista Tareas.");
        Jsiguiente.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        Jsiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JsiguienteActionPerformed(evt);
            }
        });

        cargarCalendario.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/cargar.png"))); // NOI18N
        cargarCalendario.setText("Generar Calendario");
        cargarCalendario.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        cargarCalendario.setMaximumSize(new java.awt.Dimension(117, 40));
        cargarCalendario.setMinimumSize(new java.awt.Dimension(117, 40));
        cargarCalendario.setPreferredSize(new java.awt.Dimension(117, 40));
        cargarCalendario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarCalendarioActionPerformed(evt);
            }
        });

        jTabbedPane1.setBackground(new java.awt.Color(200, 221, 242));
        jTabbedPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.BOTTOM), "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.ABOVE_BOTTOM));
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(200, 221, 242));

        jLayeredPane1.setBackground(new java.awt.Color(238, 238, 238));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(860, 590));

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel4.setText("Disposición:");
        jLayeredPane1.add(jLabel4);
        jLabel4.setBounds(20, 240, 90, 17);

        jLabel6.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel6.setText("Seleccione la fecha final:");
        jLayeredPane1.add(jLabel6);
        jLabel6.setBounds(20, 430, 250, 17);

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 14)); // NOI18N
        jLabel5.setText("Seleccione la fecha inicial:");
        jLayeredPane1.add(jLabel5);
        jLabel5.setBounds(0, 370, 250, 17);

        jLabel9.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Vista previa del Calendario Semanal:");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jLayeredPane1.add(jLabel9);
        jLabel9.setBounds(290, 10, 550, 30);

        buttonGroup1.add(cMensual);
        cMensual.setText("Calendario mensual");
        cMensual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cMensualActionPerformed(evt);
            }
        });
        jLayeredPane1.add(cMensual);
        cMensual.setBounds(100, 290, 180, 21);

        buttonGroup1.add(cAnual);
        cAnual.setText("Calendario anual");
        cAnual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cAnualActionPerformed(evt);
            }
        });
        jLayeredPane1.add(cAnual);
        cAnual.setBounds(100, 320, 180, 21);

        buttonGroup1.add(cSemanal);
        cSemanal.setSelected(true);
        cSemanal.setText("Calendario semanal");
        cSemanal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cSemanalActionPerformed(evt);
            }
        });
        jLayeredPane1.add(cSemanal);
        cSemanal.setBounds(100, 260, 180, 21);

        imagenesCalendarios.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLayeredPane1.add(imagenesCalendarios);
        imagenesCalendarios.setBounds(290, 50, 550, 510);

        JfechaFinal.setToolTipText("Introducir fecha");
        JfechaFinal.setDateFormatString("dia-mes-año");
        JfechaFinal.setMaxSelectableDate(new java.util.Date(253370786519000L));
        JfechaFinal.setMinSelectableDate(new java.util.Date(-62135747881000L));
        jLayeredPane1.add(JfechaFinal);
        JfechaFinal.setBounds(100, 460, 180, 30);
        jLayeredPane1.add(mes);
        mes.setBounds(100, 390, 120, 30);

        anno.setDayChooser(null);
        anno.setMaximum(3000);
        anno.setStartYear(1900);
        jLayeredPane1.add(anno);
        anno.setBounds(220, 390, 60, 30);

        jshowDay.setFont(new java.awt.Font("Script MT Bold", 2, 40)); // NOI18N
        jshowDay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jshowDay.setText("10:10:10");
        jshowDay.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLayeredPane1.add(jshowDay);
        jshowDay.setBounds(40, 10, 190, 70);

        Jfecha.setToolTipText("Introducir fecha");
        jLayeredPane1.add(Jfecha);
        Jfecha.setBounds(100, 390, 180, 30);

        showDate.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        showDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        showDate.setText("enero");
        jLayeredPane1.add(showDate);
        showDate.setBounds(30, 110, 230, 20);

        JLDiaSemana.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        JLDiaSemana.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        JLDiaSemana.setText("dia de semana");
        jLayeredPane1.add(JLDiaSemana);
        JLDiaSemana.setBounds(30, 85, 230, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/monitor2.png"))); // NOI18N
        jLayeredPane1.add(jLabel1);
        jLabel1.setBounds(30, 10, 230, 170);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 848, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 591, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Plantillas", jPanel2);

        jLayeredPane2.setBackground(new java.awt.Color(238, 238, 238));
        jLayeredPane2.setPreferredSize(new java.awt.Dimension(860, 590));

        jScrollPane1.setBackground(new java.awt.Color(201, 221, 242));

        jTable1.setFont(new java.awt.Font("Liberation Sans", 0, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Fecha y Hora", "Título", "Lugar", "Categoría", "Repetir tarea", "Descripción"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true, true, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(new java.awt.Color(0, 0, 0));
        jTable1.setRowHeight(24);
        jTable1.setSelectionBackground(new java.awt.Color(49, 187, 230));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jTable1ComponentShown(evt);
            }
        });
        jTable1.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentRemoved(java.awt.event.ContainerEvent evt) {
                jTable1ComponentRemoved(evt);
            }
        });
        jTable1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTable1PropertyChange(evt);
            }
        });
        jTable1.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
                jTable1AncestorRemoved(evt);
            }
        });
        jTable1.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                jTable1VetoableChange(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLayeredPane2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 840, 460);

        jToolBar1.setBackground(new java.awt.Color(200, 221, 242));
        jToolBar1.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, new java.awt.Color(102, 102, 255)));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/adicionar.png"))); // NOI18N
        jButton1.setToolTipText("Adicionar tarea. ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/eliminar.png"))); // NOI18N
        jButton2.setToolTipText("Eliminar tarea(s) seleccionada(s).");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton2);

        jLayeredPane2.add(jToolBar1);
        jToolBar1.setBounds(0, 460, 840, 40);

        jLabel3.setBackground(new java.awt.Color(200, 221, 242));
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/fondo azul.png"))); // NOI18N
        jLayeredPane2.add(jLabel3);
        jLabel3.setBounds(0, 0, 840, 590);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 848, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 848, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 603, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Tareas", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Janterior)
                .addGap(18, 18, 18)
                .addComponent(Jsiguiente)
                .addGap(111, 111, 111)
                .addComponent(cargarCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 855, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 620, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Janterior, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Jsiguiente, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cargarCalendario, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cargarCalendarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarCalendarioActionPerformed
        try {
            
              int CantTablasAPoner = 0;
            boolean mal = false;
            if (cSemanal.isSelected()) {
                if (mal = JfechaFinal.getCalendar().compareTo(Jfecha.getCalendar()) < 0) {
                    JOptionPane.showMessageDialog(this, "La fecha final "
                            + "no debe ser menor que la inicial.", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/info.png")));
                } else {
                    CantTablasAPoner = (int) CantTablasAAgregar();
                    cal = Jfecha.getCalendar();
                    if (cal.get(Calendar.DAY_OF_WEEK) == 1) {
                        cal.add(Calendar.DAY_OF_MONTH, -1);
                    }
                    man.IniciarManager(new CECalendarioSemanalDinamico());
                    //estableser el limite del  calendario
                    fechaFinRep = (Calendar) cal.clone();

                    fechaFinRep.add(Calendar.DAY_OF_MONTH, 7 * (CantTablasAPoner + 1));
                    cal.get(Calendar.DAY_OF_MONTH);

                }
            }/* else if (cMensual.isSelected()) {

             cal = Calendar.getInstance(Locale.getDefault());
             // establecer la JfechaFinal que puso el user
             // anno especificado  mes especificado dia primero
             cal.set(anno.getYear(), mes.getMonth(), 1);
             cal.getActualMaximum(Calendar.DAY_OF_MONTH);

             man.IniciarManager(new CECalendarioMensualPorDia());
             //estableser el limite del  calendario
             fechaFinRep = (Calendar) cal.clone();
             fechaFinRep.add(Calendar.MONTH, 1);
             fechaFinRep.add(Calendar.DAY_OF_MONTH, 7);

             }*/ else if (cAnual.isSelected()) {
                cal = Calendar.getInstance(Locale.getDefault());

                cal.set( anno.getYear(), Calendar.JANUARY, 1);
                //  System.out.println(cal.get(Calendar.DAY_OF_YEAR));
                man.IniciarManager(new CECalendarioAnual());
                //estableser el limite del  calendario
                fechaFinRep = (Calendar) cal.clone();
                fechaFinRep.add(Calendar.YEAR, 1);
                fechaFinRep.add(Calendar.DAY_OF_MONTH, 7);
            } else if (cMensual.isSelected()) {

                cal = Calendar.getInstance(Locale.getDefault());
                // establecer la JfechaFinal que puso el user
                // anno especificado  mes especificado dia primero
                cal.set(anno.getYear(), mes.getMonth(), 1);
                //  cal.getActualMaximum(Calendar.DAY_OF_MONTH);

                man.IniciarManager(new CECalendarioMensual());
                //estableser el limite del  calendario
                fechaFinRep = (Calendar) cal.clone();
                fechaFinRep.add(Calendar.MONTH, 1);
                fechaFinRep.add(Calendar.DAY_OF_MONTH, 7);

            }

            /*
             String[] botones = {"Si", "No", "Cerrar el Asistente"};
             int opcion = JOptionPane.showOptionDialog(null, " Quieres crear otra plantilla con las mismas tareas ?", "Cita",
             JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE,
             null, botones, botones[0]);
             */      /*  Cargando car= new Cargando(this, rootPaneCheckingEnabled, man) ;
             car.setVisible(true);*/
            if (!mal) {
                Terminar ter = new Terminar(this, rootPaneCheckingEnabled, man, CantTablasAPoner, cal, fechaFinRep);
                ter.setAlwaysOnTop(true);
                ter.setVisible(true);
                int opcion = ter.getOpcion();
                switch (opcion) {
                    case 1:
                        man.setListTareas(new LinkedList<Tarea>());
                        updateInterfTareas();
                        break;
                    case 2:
                        System.exit(0);
                    case 0:
                        man.LimpiarNumerosTareas();
                        updateInterfTareas();
                        break;

                }
            }
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(this, "Por favor verifique los campos.", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/info.png")));
        }
    }//GEN-LAST:event_cargarCalendarioActionPerformed

    private void cMensualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cMensualActionPerformed
        updateInterfPlantilla();
    }//GEN-LAST:event_cMensualActionPerformed

    private void cAnualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cAnualActionPerformed
        updateInterfPlantilla();
    }//GEN-LAST:event_cAnualActionPerformed

    private void cSemanalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cSemanalActionPerformed
        updateInterfPlantilla();
    }//GEN-LAST:event_cSemanalActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        if (jTabbedPane1.getSelectedIndex() == 1) {
            Jsiguiente.setEnabled(false);
            Janterior.setEnabled(true);
        } else {
            Jsiguiente.setEnabled(true);
            Janterior.setEnabled(false);
        }
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void JanteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JanteriorActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_JanteriorActionPerformed

    private void JsiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JsiguienteActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_JsiguienteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
if(JOptionPane.showConfirmDialog(this,"entre si so","Confirmación", JOptionPane.OK_CANCEL_OPTION)==0){
        for (int i = jTable1.getSelectedRowCount() - 1; i >= 0; i--) {
            int pos = jTable1.getSelectedRows()[i];
            man.getListTareas().remove(pos);
        }
        updateInterfTareas();
        if (man.getListTareas() != null && man.getListTareas().size() > 0) {
            jTable1.setRowSelectionInterval(man.getListTareas().size() - 1, man.getListTareas().size() - 1);
        }}
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        CrearTarea vcreatarea = new CrearTarea(this, rootPaneCheckingEnabled, man);
        vcreatarea.setVisible(true);

        updateInterfTareas();
        if (jTable1.getRowCount() > 0) {
            jTable1.setRowSelectionInterval(vcreatarea.getPos(), vcreatarea.getPos());

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTable1ComponentRemoved(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTable1ComponentRemoved
        boolean mal = false;
        Point punto = evt.getChild().getLocation();
        int row = jTable1.rowAtPoint(punto);
        int col = jTable1.columnAtPoint(punto);/////////////////////////
        if (col != 0) {
            Object valueAt = jTable1.getValueAt(row, col);
            //  llamar a la vista del personalizar repeticion
            if (valueAt instanceof TipeRepit) {
                TipeRepit repeticion = (TipeRepit) valueAt;
                if (repeticion.equals(TipeRepit.Personalizar)) {
                    RepitPersonalizado persAnterior = man.getListTareas().get(row).getRePersonal();
                    PersRepitForm persrepForm = new PersRepitForm(this, rootPaneCheckingEnabled, persAnterior,
                            man.getListTareas().get(row).getListafechas().get(0), punto, man);
                    persrepForm.setVisible(true);

                    persAnterior = persrepForm.getPersonalizado();
                    if (persAnterior == null) {
                        valueAt = TipeRepit.No_repetir;
                    } else {
                        man.getListTareas().get(row).Modifi(6, persAnterior);
                    }
                }
            } else if (mal = (col == 1 && valueAt.equals(""))) {
                JOptionPane.showMessageDialog(this, "El título  no puede estar vacío.", "Error", JOptionPane.ERROR_MESSAGE, new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/info.png")));

            }
            if (!mal) {
                man.getListTareas().get(row).Modifi(col, valueAt);
            }
            updateInterfTareas();
                jTable1.setRowSelectionInterval(row, row);
            
        }

    }//GEN-LAST:event_jTable1ComponentRemoved

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int row = jTable1.rowAtPoint(evt.getPoint());
        int col = jTable1.columnAtPoint(evt.getPoint());
        
        if (row > -1) {
            Object ccc = null;
            if(col == 1 || col == 2){
                JTextField jtextfild =   (JTextField) jTable1.getCellEditor(row, col).getTableCellEditorComponent(jTable1, true, true, row, col);
               jtextfild.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
             JTextField lugarTitulo = (JTextField) jTable1.getComponent(1);
        if (lugarTitulo.getText().length() == 100) {
            evt.consume();
        }
            }
          
        });
            }   
            if (col == 0 || col == 5) {
                if (col == 0) {
                    String fec = (String) jTable1.getValueAt(row, col);
                    Calendar caenda = man.getListTareas().get(row).getListafechas().get(0);
                    EditDate edit = new EditDate(this, rootPaneCheckingEnabled, caenda, evt.getLocationOnScreen(), man);
                    edit.setVisible(true);
                    ccc = edit.getCal();

                } else {
                    String descrip = man.getListTareas().get(row).getDescripcion();
                    EditDescripcion edes = new EditDescripcion(this, rootPaneCheckingEnabled, descrip, evt.getLocationOnScreen(), man);
                    edes.setVisible(true);
                    ccc = edes.getDescripcion();
                }
                man.getListTareas().get(row).Modifi(col, ccc);

                if (ccc instanceof Calendar) {
                    Tarea get = man.getListTareas().get(row);
                    man.OrdenarTareasPorPriFecha();
                    row = man.getListTareas().indexOf(get);
                }
                updateInterfTareas();
                jTable1.setRowSelectionInterval(row, row);
            }
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jTable1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jTable1PropertyChange
        System.out.println("");
    }//GEN-LAST:event_jTable1PropertyChange

    private void jTable1AncestorRemoved(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_jTable1AncestorRemoved
        System.out.println("");
    }//GEN-LAST:event_jTable1AncestorRemoved

    private void jTable1VetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_jTable1VetoableChange
         System.out.println("");
    }//GEN-LAST:event_jTable1VetoableChange

    private void jTable1ComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jTable1ComponentShown
      System.out.println("");
    }//GEN-LAST:event_jTable1ComponentShown

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLDiaSemana;
    private javax.swing.JButton Janterior;
    private com.toedter.calendar.JDateChooser Jfecha;
    private com.toedter.calendar.JDateChooser JfechaFinal;
    private javax.swing.JButton Jsiguiente;
    private com.toedter.calendar.JYearChooser anno;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JRadioButton cAnual;
    private javax.swing.JRadioButton cMensual;
    private javax.swing.JRadioButton cSemanal;
    private javax.swing.JButton cargarCalendario;
    private javax.swing.JLabel imagenesCalendarios;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JLabel jshowDay;
    private com.toedter.calendar.JMonthChooser mes;
    private javax.swing.JLabel showDate;
    // End of variables declaration//GEN-END:variables

    private void setShowDateLabels() {
        cal = Calendar.getInstance(Locale.getDefault());
        HiloReloj reloj = new HiloReloj(jshowDay, null, showDate, JLDiaSemana);
        reloj.start();

    }

    private void updateInterfTareas() {
        if (man.getListTareas() != null) {

            List<Tarea> lista = man.getListTareas();
            DefaultTableModel tabla = (DefaultTableModel) jTable1.getModel();
            while (jTable1.getRowCount() > 0) {
                tabla.removeRow(0);
            }
            ////////////////////////////////////////

            TipeTarea[] DATA = TipeTarea.values();
            JComboBox comboBox = new JComboBox(DATA);
            DefaultCellEditor defaultCellEditor = new DefaultCellEditor(comboBox);
            jTable1.getColumnModel().getColumn(3).setCellEditor(defaultCellEditor);
            TipeRepit[] DATA1 = TipeRepit.values();
            comboBox = new JComboBox(DATA1);
            defaultCellEditor = new DefaultCellEditor(comboBox);
            jTable1.getColumnModel().getColumn(4).setCellEditor(defaultCellEditor);
            //////////////
           // new mio
            JTextField jtextField = new JTextField();
            defaultCellEditor = new DefaultCellEditor(jtextField);
            jTable1.getColumnModel().getColumn(1).setCellEditor(defaultCellEditor); 
            jTable1.getColumnModel().getColumn(2).setCellEditor(defaultCellEditor);       
            //////////////////////////////////////////////////
            for (int i = 0; i < lista.size(); i++) {
                Object[] fila = new Object[6];

                fila[0] = man.getFechaAString(lista.get(i).getListafechas().get(0));
                fila[1] = lista.get(i).getTitulo();
                fila[2] = lista.get(i).getLugar();
                fila[3] = lista.get(i).getCategoria();
                fila[4] = lista.get(i).getRepit();
                fila[5] = lista.get(i).getDescripcion();

                tabla.addRow(fila);

            }

            jButton2.setEnabled(lista.size() > 0);

        }
    }

    private void escondersemnal() {
        Jfecha.setVisible(false);
        JfechaFinal.setVisible(false);
    }

    private void updateInterfPlantilla() {
        if (cMensual.isSelected()) {
            Jfecha.setVisible(false);
            mes.setVisible(true);
            anno.setVisible(true);
            anno.setLocation(220, anno.getY());
            JfechaFinal.setVisible(false);
            jLabel6.setVisible(false);
            jLabel9.setText("Vista previa del Calendario Mensual:");
            jLabel5.setText("Seleccione el mes y año inicial:");
            image = new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/VistaPreviaCalendarioMensual.png"));
            escondersemnal();
        } else if (cAnual.isSelected()) {
            mes.setVisible(false);
            anno.setVisible(true);
            anno.setLocation(190, anno.getY());
            JfechaFinal.setVisible(false);
            Jfecha.setVisible(false);
            jLabel9.setText("Vista previa del Calendario Anual:");
            jLabel5.setText("Seleccione el año inicial:");
            jLabel6.setVisible(false);
            image = new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/VistaPreviaCalendarioAnual.png"));
            escondersemnal();
        } else if (cSemanal.isSelected()) {
            mes.setVisible(false);
            anno.setVisible(false);
            anno.setLocation(220, anno.getY());
            JfechaFinal.setVisible(true);
            Jfecha.setVisible(true);
            jLabel9.setText("Vista previa del Calendario Semanal:");
            jLabel6.setVisible(true);
            jLabel6.setText("Seleccione la fecha final:");
            jLabel5.setText("Seleccione la fecha inicial:");
            image = new ImageIcon(getClass().getResource("/com/sun/star/wizards/calendar/Images/VistaPreviaCalendarioSemanal.png"));
        }
        imagenesCalendarios.setIcon(image);

    }

    public Manager getMan() {
        return man;
    }

    public long CantTablasAAgregar() {
        long dif = 0;
        Calendar feini = Jfecha.getCalendar();
        Calendar feFin = JfechaFinal.getCalendar();
        if (feini.compareTo(feFin) < 0) {
            long fintimeInMillis = feFin.getTimeInMillis();
            long initimeInMillis = feini.getTimeInMillis();
            dif = fintimeInMillis - initimeInMillis;
            dif = dif / 86400000;
            dif = dif / 7;
        }

        System.out.println(dif);
        return dif;

    }
}
